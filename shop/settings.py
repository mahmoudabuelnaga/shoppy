"""
Django settings for shop project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_*5@(b7wty4n+7#=j_+6-$k*(on%de$xgaz++^lv&4y$%tbk7#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [] #['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #Our apps
    'bootstrap4',
    'products.apps.ProductsConfig',
    'cart.apps.CartConfig',
    'orders.apps.OrdersConfig',
    'payment.apps.PaymentConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                # ....
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'shop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')
STATICFILES_DIRS = [
	os.path.join(BASE_DIR, 'static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



# sessions
CART_SESSION_ID = 'cart'


# SMTP
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_HOST          = 'smtp.fastmail.com'
# EMAIL_PORT          = 465
# EMAIL_HOST_USER     = 'worldofbooks1751998@gmail.com'
# EMAIL_HOST_PASSWORD = 'worldofbooks1751998@groub13'
# EMAIL_USE_TLS       = False
# EMAIL_USE_SSL       = True

# EMAIL_HOST          = 'smtp.gmail.com'
# EMAIL_HOST_USER     = 'worldofbooks1751998@gmail.com'
# EMAIL_HOST_PASSWORD = 'worldofbooks1751998@groub13'
# EMAIL_PORT          = 587
# EMAIL_USE_TLS       = True
# EMAIL_USE_SSL       = True
EMAIL_BACKEND       = 'django.core.mail.backends.console.EmailBackend'


# Celery
CELERY_BROKER_URL = "amqp://localhost"
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'



# Braintree settings
# from braintree import Configuration, Environment


# BRAINTREE_MERCHANT_ID   = '66jmbkmdhckwn7bh'    # Merchant ID 
# BRAINTREE_PUBLIC_KEY    = 'mdn6sfff9hq85vdw'    # Public Key 
# BRAINTREE_PRIVATE_KEY   = '4e78e9aa1179854fd553fa8af6d90844'    # Private Key 
     
# Configuration.configure(
#     Environment.Sandbox,    # ---> Environment.Production  (live)
#     BRAINTREE_MERCHANT_ID,
#     BRAINTREE_PUBLIC_KEY,
#     BRAINTREE_PRIVATE_KEY
# )


# Stripe Payment
STRIPE_SECRET_KEY = 'sk_test_LW7n1E82NzgbKG5QLj6UTvff00CjJ4S9MG'
STRIPE_PUBLISHABLE_KEY = 'pk_test_IzSIOFYSyIbzCMlGfXKrjLYe00O8bysXA0'
